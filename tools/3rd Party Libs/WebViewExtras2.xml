<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.04</doclet-version-NOT-library-version>
    <class>
        <name>uk.co.martinpearman.b4a.net.http.SslError</name>
        <shortname>SslError</shortname>
        <objectwrapper>android.net.http.SslError</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetPrimaryError</name>
            <comment>Gets the most severe SSL error in this object's set of errors.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetUrl</name>
            <comment>Gets the URL associated with this object.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>AddError</name>
            <comment>Adds the supplied SSL error to the set.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Error</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetCertificate</name>
            <comment>Gets the SSL certificate associated with this object.
 Note that B4A currently has no support for the SslCertificate object.</comment>
            <returntype>android.net.http.SslCertificate</returntype>
        </method>
        <method>
            <name>HasError</name>
            <comment>Determines whether this object includes the supplied Error.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Error</name>
                <type>int</type>
            </parameter>
        </method>
        <field>
            <name>SSL_UNTRUSTED</name>
            <comment>The certificate authority is not trusted.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_IDMISMATCH</name>
            <comment>Hostname mismatch.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_DATE_INVALID</name>
            <comment>The date of the certificate is invalid.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_INVALID</name>
            <comment>A generic error occurred.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_MAX_ERROR</name>
            <comment>This constant was deprecated in API level 14.
 This constant is not necessary for using the SslError API and can change from release to release.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_NOTYETVALID</name>
            <comment>The certificate is not yet valid.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_EXPIRED</name>
            <comment>The certificate has expired.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.WebViewExtras</name>
        <shortname>WebViewExtras</shortname>
        <objectwrapper>android.webkit.WebView</objectwrapper>
        <owner>process</owner>
        <method>
            <name>CanGoback</name>
            <comment>Returns whether the WebView has a back history item.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ClearSslPreferences</name>
            <comment>Clears the SSL preferences table stored in response to proceeding with SSL certificate errors.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>LoadHtml</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ClearFormData</name>
            <comment>Removes the autocomplete popup from the currently focused form field, if present.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindAllAsynch</name>
            <comment>Finds all instances of 'Find' on the page and highlights them, asynchronously.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Find</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetHttpAuthUsernamePassword</name>
            <comment>Stores HTTP authentication credentials for a given Host and Realm.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Host</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Realm</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Username</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ExecuteJavascript</name>
            <comment>Executes a string of javascript statements.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Javascript</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>WebView1</name>
                <type>android.webkit.WebView</type>
            </parameter>
        </method>
        <method>
            <name>ShowFindDialog</name>
            <comment>Starts an ActionMode for finding text in this WebView.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ShowIme</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GoBackOrForward</name>
            <comment>Goes to the history item that is the number of steps away from the current item.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Steps</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>LoadUrl2</name>
            <comment>Loads the given URL with the specified additional HTTP headers.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Headers</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Reload</name>
            <comment>Reloads the current URL.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ResumeTimers</name>
            <comment>Resumes all layout, parsing, and JavaScript timers for all WebViews.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Back</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetOriginalUrl</name>
            <comment>Gets the original URL for the current page.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>CaptureBitmap</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
        </method>
        <method>
            <name>GetProgress</name>
            <comment>Gets the progress for the current page.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>OverlayHorizontalScrollbar</name>
            <comment>Gets whether horizontal scrollbar has overlay style.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>PageUp</name>
            <comment>Scroll the contents of the WebView up by half the page size.
 ScrollToTop - If True then the WebView will be scrolled to the top of the page.
 Returns a Boolean value to indicate the success or failure of the scroll.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ScrollToTop</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>CanZoomIn</name>
            <comment>Returns whether the WebView can zoom in.
 This method was deprecated in API level 17.
 This method is prone to inaccuracy due to race conditions between the web rendering and UI threads; prefer onScaleChanged(WebView, float, float).</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>PauseTimers</name>
            <comment>Pauses all layout, parsing, and JavaScript timers for all WebViews.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SavePassword</name>
            <comment>Sets a Username and Password pair for the specified Host.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Host</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Username</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetFindListener</name>
            <comment>Registers FindListener1 to be notified as find-on-page operations progress.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FindListener1</name>
                <type>android.webkit.WebView.FindListener</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>SetWebChromeClient</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>WebChromeClient1</name>
                <type>android.webkit.WebChromeClient</type>
            </parameter>
        </method>
        <method>
            <name>SetWebViewClient</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>WebViewClient1</name>
                <type>android.webkit.WebViewClient</type>
            </parameter>
        </method>
        <method>
            <name>FindNext</name>
            <comment>Highlights and scrolls to the next match found by findAllAsync(String), wrapping around page boundaries as necessary.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Forward</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ClearHistory</name>
            <comment>Tells this WebView to clear its internal back/forward list.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>CanZoomOut</name>
            <comment>Returns whether the WebView can zoom out.
 This method was deprecated in API level 17.
 This method is prone to inaccuracy due to race conditions between the web rendering and UI threads; prefer onScaleChanged(WebView, float, float).</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetSettings</name>
            <comment></comment>
            <returntype>uk.co.martinpearman.b4a.webkit.WebSettings</returntype>
        </method>
        <method>
            <name>SaveWebArchive</name>
            <comment>Saves the current view as a web archive.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Filename</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>OverlayVerticalScrollbar</name>
            <comment>Gets whether vertical scrollbar has overlay style.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>LoadUrl</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ClearCache</name>
            <comment>Clear the WebView cache.
 IncludeDiskFiles - If false, only the RAM cache is cleared.
 Note that the cache is per-application, so this will clear the cache for all WebViews used in an application.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>IncludeDiskFiles</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddJavascriptInterface</name>
            <comment>Injects the supplied Java object into this WebView.
 JavascriptInterface - The Java object to inject into this WebView's JavaScript context. Null values are ignored.
 InterfaceName - The name used to expose the object in JavaScript.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>JavascriptInterface</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>InterfaceName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetHttpAuthUsernamePassword</name>
            <comment>Retrieves HTTP authentication credentials for the given Host and Realm.</comment>
            <returntype>java.lang.String[]</returntype>
            <parameter>
                <name>Host</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Realm</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetTitle</name>
            <comment>Gets the title for the current page.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>FreeMemory</name>
            <comment>Informs the WebView that memory is low so that it can free any available memory.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetScale</name>
            <comment>Get the WebView scale.
 This method was deprecated in API level 17.
 This method is prone to inaccuracy due to race conditions between the web rendering and UI threads; prefer onScaleChanged(WebView, float, float).</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>CopyBackForwardList</name>
            <comment>Gets the WebBackForwardList for this WebView.</comment>
            <returntype>uk.co.martinpearman.b4a.webkit.WebBackForwardList</returntype>
        </method>
        <method>
            <name>FindAll</name>
            <comment>This method was deprecated in API level 16. findAllAsync(String) is preferred.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Find</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsPrivateBrowsingEnabled</name>
            <comment>Gets whether private browsing is enabled in the WebView.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Zoom</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>CanGoBackOrForward</name>
            <comment>Returns whether the WebView can go back or forward the given number of steps.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Steps</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>StopLoading</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveJavascriptInterface</name>
            <comment>Removes a previously injected Java object from this WebView.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>InterfaceName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetHorizontalScrollbarOverlay</name>
            <comment>Specifies whether the horizontal scrollbar has overlay style.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Overlay</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>PostUrl</name>
            <comment>Loads the URL with postData using "POST" method into this WebView.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>PostData</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>FlingScroll</name>
            <comment>Initiates a fling scroll.
 VelocityX - Velocity of the scroll on the X axis.
 VelocityY - Velocity of the scroll on the Y axis.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>VelocityX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>VelocityY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetFavicon</name>
            <comment>Gets the favicon for the current page.</comment>
            <returntype>android.graphics.Bitmap</returntype>
        </method>
        <method>
            <name>SetNetworkAvailable</name>
            <comment>Informs WebView of the network state.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>NetworkUp</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetScrollBarStyle</name>
            <comment>Specify the style of the scrollbars.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Style</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetVerticalScrollbarOverlay</name>
            <comment>Specifies whether the vertical scrollbar has overlay style.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Overlay</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetOverScrollMode</name>
            <comment>Set the over-scroll mode for this WebView.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetContentHeight</name>
            <comment>Gets the height of the HTML content.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Forward</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>PageDown</name>
            <comment>Scroll the contents of the WebView down by half the page size.
 ScrollToBottom - If True then the WebView will be scrolled to the bottom of the page.
 Returns a Boolean value to indicate the success or failure of the scroll.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ScrollToBottom</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetInitialScale</name>
            <comment>Sets the initial scale for this WebView.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ScaleInPercent</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>InvokeZoomPicker</name>
            <comment>Invokes the graphical zoom picker widget for the WebView.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>JavaScriptEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Url</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ZoomEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.WebSettings</name>
        <shortname>WebSettings</shortname>
        <objectwrapper>android.webkit.WebSettings</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetTextZoom</name>
            <comment>Gets the text zoom of the page in percent.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetDatabaseEnabled</name>
            <comment>Set whether the database storage API is enabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetSerifFontFamily</name>
            <comment>Gets the serif font family name.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetDefaultZoom</name>
            <comment>Get the default zoom density of the page.
 Possible return values are: "CLOSE", "FAR" and "MEDIUM"</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetDOMStorageEnabled</name>
            <comment>Set whether the DOM storage API is enabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetFixedFontFamily</name>
            <comment>Sets the fixed font family name.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetAppCacheEnabled</name>
            <comment>Sets whether the Application Caches API should be enabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetSupportZoom</name>
            <comment>Sets whether the WebView should support zooming using its on-screen zoom controls and gestures.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Support</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetMediaPlaybackRequiresUserGesture</name>
            <comment>Gets whether the WebView requires a user gesture to play media.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetStandardFontFamily</name>
            <comment>Sets the standard font family name.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetDefaultTextEncodingName</name>
            <comment>Get the default text encoding name. The default is "Latin-1".
 Returns the default text encoding name as a string.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetBuiltInZoomControls</name>
            <comment>Sets whether the WebView should use its built-in zoom mechanisms.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetLoadsImagesAutomatically</name>
            <comment>Sets whether the WebView should load image resources.
 Note that this method controls loading of all images, including those embedded using the data URI scheme.
 Use SetBlockNetworkImage(boolean) to control loading only of images specified using network URI schemes.
 Note that if the value of this setting is changed from false to true, all images resources referenced by content currently displayed by the WebView are loaded automatically. 
 The default value is True.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetUserAgentString</name>
            <comment>Set the WebView's user-agent string.
 If the string UserAgent is null or empty, it will use the system default user-agent string.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>UserAgent</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetDisplayZoomControls</name>
            <comment>Sets whether the on screen zoom buttons are displayed.
 A combination of built in zoom controls enabled and on screen zoom controls disabled allows for pinch to zoom to work without the on screen controls.
 Only supported on Android API level 11 and later.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetCacheMode</name>
            <comment>Gets the current setting for overriding the cache mode.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetTextSize</name>
            <comment>This method was deprecated in API level 14. Use SetTextZoom(int) instead. 
 TextSize - String value of SMALLEST, SMALLER, NORMAL, LARGER or LARGEST.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>TextSize</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetSavePassword</name>
            <comment>Store whether the WebView is saving password.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Save</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetBlockNetworkLoads</name>
            <comment>Gets whether the WebView does not load any resources from the network.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetLightTouchEnabled</name>
            <comment>Enables using light touches to make a selection and activate mouseovers.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetDefaultUserAgent</name>
            <comment>Returns the default User-Agent used by a WebView.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>SetFantasyFontFamily</name>
            <comment>Sets the fantasy font family name.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetSaveFormData</name>
            <comment>Store whether the WebView is saving form data.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Save</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetFixedFontFamily</name>
            <comment>Gets the fixed font family name.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetMinimumLogicalFontSize</name>
            <comment>Set the minimum logical font size.
 size - A non-negative integer between 1 and 72.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetCacheMode</name>
            <comment>Override the way the cache is used. The way the cache is used is based on the navigation option.
 For a normal page load, the cache is checked and content is re-validated as needed.
 When navigating back, content is not revalidated, instead the content is just pulled from the cache.
 This function allows the client to override this behavior.
 cacheMode - Possible values are WebSettings constants: LOAD_CACHE_ELSE_NETWORK, LOAD_CACHE_ONLY, LOAD_DEFAULT, LOAD_NO_CACHE and LOAD_NORMAL.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>CacheMode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBlockNetworkLoads</name>
            <comment>Sets whether the WebView should not load resources from the network.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetPluginState</name>
            <comment>Tell the WebView to enable, disable, or have plugins load on demand.
 On demand mode means that if a plugin exists that can handle the embedded content, a placeholder icon will be shown instead of the plugin.
 When the placeholder is clicked, the plugin will be enabled.
 Valid values are : "OFF", "ON" and "ON_DEMAND".</comment>
            <returntype>void</returntype>
            <parameter>
                <name>State</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetUseWideViewPort</name>
            <comment>Tell the WebView to use a wide viewport.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Use</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SupportMultipleWindows</name>
            <comment>Gets whether the WebView supports multiple windows.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetSupportMultipleWindows</name>
            <comment>Sets whether the WebView whether supports multiple windows.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Support</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetTextZoom</name>
            <comment>Sets the text zoom of the page in percent.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>TextZoom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetJavaScriptCanOpenWindowsAutomatically</name>
            <comment>Tell javascript to open windows automatically.
 This applies to the javascript function window.open().</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetDefaultFontSize</name>
            <comment>Get the default font size. The default is 16.
 Returns a non-negative integer between 1 and 72.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetSavePassword</name>
            <comment>Get whether the WebView is saving passwords.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetAppCachePath</name>
            <comment>Set a custom path to the Application Caches files.
 The client must ensure it exists before this call.
 appCachePath - String path to the directory containing Application Caches files. The appCache path can be the empty string but should not be null.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>AppCachePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetGeolocationEnabled</name>
            <comment>Sets whether Geolocation is enabled.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SupportZoom</name>
            <comment>Gets whether the WebView supports zoom.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetAllowContentAccess</name>
            <comment>Gets whether this WebView supports content URL access.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetDatabasePath</name>
            <comment>Returns the location where the database storage API databases are saved.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetDefaultTextEncodingName</name>
            <comment>Set the default text encoding name to use when decoding html pages.
 The default is "Latin-1".</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetMinimumFontSize</name>
            <comment>Set the minimum font size.
 size - A non-negative integer between 1 and 72.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetGeolocationDatabasePath</name>
            <comment>Sets the path where the Geolocation databases should be saved.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>DatabasePath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetJavaScriptCanOpenWindowsAutomatically</name>
            <comment>Get if javascript can open windows automatically. The default is false.
 Returns true if javascript can open windows automatically during window.open().</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetAllowContentAccess</name>
            <comment>Enables or disables content URL access within WebView.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Allow</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetStandardFontFamily</name>
            <comment>Gets the standard font family name.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetFantasyFontFamily</name>
            <comment>Gets the fantasy font family name.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetAllowFileAccess</name>
            <comment>Enables or disables file access within WebView.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Allow</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetDatabasePath</name>
            <comment>Sets the location where the database storage API databases are saved.
 If path is an empty String "" then a default path will be set.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetTextSize</name>
            <comment>Returns a String SMALLEST, SMALLER, NORMAL, LARGER or LARGEST.
 SMALLEST is 50%
 SMALLER is 75%
 NORMAL is 100%
 LARGER is 150%
 LARGEST is 200%
 This method was deprecated in API level 14. Use GetTextZoom() instead.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetLightTouchEnabled</name>
            <comment>Gets whether light touches are enabled.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetDisplayZoomControls</name>
            <comment>Returns true if the on screen zoom buttons are displayed.
Only supported on Android API level 11 and later.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetUserAgentString</name>
            <comment>Get the WebView's user-agent string.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetSansSerifFontFamily</name>
            <comment>Gets the sans-serif font family name.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>EnableSmoothTransition</name>
            <comment>This method was deprecated in API level 17.
 This method is now obsolete, and will become a no-op in future.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetDatabaseEnabled</name>
            <comment>Gets whether the database storage API is enabled.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetLoadWithOverviewMode</name>
            <comment>Gets whether this WebView loads pages in overview mode.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetSaveFormData</name>
            <comment>Get whether the WebView is saving form data and displaying prior entries/autofill.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetMediaPlaybackRequiresUserGesture</name>
            <comment>Sets whether the WebView requires a user gesture to play media.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Requires</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetMinimumFontSize</name>
            <comment>Gets the minimum font size.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetDOMStorageEnabled</name>
            <comment>Returns whether the DOM storage APIs are enabled.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetMinimumLogicalFontSize</name>
            <comment>Gets the minimum logical font size.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetDefaultFixedFontSize</name>
            <comment>Get the default fixed font size. The default is 16.
 Returns a non-negative integer between 1 and 72.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetSansSerifFontFamily</name>
            <comment>Sets the sans-serif font family name.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetDefaultZoom</name>
            <comment>Set the default zoom density of the page.
 Density - Possible values are: "CLOSE", "FAR" and "MEDIUM".</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Density</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetBlockNetworkImage</name>
            <comment>Sets whether the WebView should not load image resources from the network (resources accessed via http and https URI schemes).
 Note that this method has no effect unless GetLoadsImagesAutomatically() returns True.
 Also note that disabling all network loads using SetBlockNetworkLoads(boolean) will also prevent network images from loading, even if this flag is set to False.
 When the value of this setting is changed from true to false, network images resources referenced by content currently displayed by the WebView are fetched automatically.
 The default value is False.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetAllowFileAccess</name>
            <comment>Gets whether this WebView supports file access.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetEnableSmoothTransition</name>
            <comment>This method was deprecated in API level 17.
 This method is now obsolete, and will become a no-op in future.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetDefaultFontSize</name>
            <comment>Set the default font size.
 Size - A non-negative integer between 1 and 72.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetAppCacheMaxSize</name>
            <comment>Sets the maximum size for the Application Cache content.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>AppCacheMaxSize</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>SetRenderPriority</name>
            <comment>Sets the priority of the Render thread.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Priority</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetUseWideViewPort</name>
            <comment>Gets whether the WebView is using a wide viewport.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetDefaultFixedFontSize</name>
            <comment>Set the default fixed font size.
 Size - A non-negative integer between 1 and 72.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetCursiveFontFamily</name>
            <comment>Set the cursive font family name.
 Font - A font family name.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetLoadWithOverviewMode</name>
            <comment>Sets whether the WebView loads pages in overview mode.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Overview</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetBlockNetworkImage</name>
            <comment>Gets whether the WebView does not load image resources from the network.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetCursiveFontFamily</name>
            <comment>Get the cursive font family name. The default is "cursive".
 Returns the cursive font family name as a string.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetPluginState</name>
            <comment>Get the current plugin state.
 Possible return values are: "OFF", "ON" and "ON_DEMAND"</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetSerifFontFamily</name>
            <comment>Sets the serif font family name.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Font</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetLoadsImagesAutomatically</name>
            <comment>Gets whether the WebView loads image resources.
 This includes images embedded using the data URI scheme.</comment>
            <returntype>boolean</returntype>
        </method>
        <field>
            <name>LOAD_CACHE_ELSE_NETWORK</name>
            <comment>Use cached resources when they are available, even if they have expired.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_NORMAL</name>
            <comment>This constant was deprecated in API level 17.
 ** This value is obsolete, as from API level HONEYCOMB and onwards it has the same effect as LOAD_DEFAULT. **</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_DEFAULT</name>
            <comment>Default cache usage mode.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_CACHE_ONLY</name>
            <comment>Don't use the network, load from the cache.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOAD_NO_CACHE</name>
            <comment>Don't use the cache, load from the network.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.WebViewDatabase</name>
        <shortname>WebViewDatabase</shortname>
        <objectwrapper>android.webkit.WebViewDatabase</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ClearHttpAuthUsernamePassword</name>
            <comment>Clears any saved credentials for HTTP authentication.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClearFormData</name>
            <comment>Clears any saved data for web forms.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasHttpAuthUsernamePassword</name>
            <comment>Gets whether there are any saved credentials for HTTP authentication.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>ClearUsernamePassword</name>
            <comment>Clears any saved username/password pairs for web forms.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>HasUsernamePassword</name>
            <comment>Gets whether there are any saved username/password pairs for web forms.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>HasFormData</name>
            <comment>Gets whether there is any saved data for web forms.</comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.DefaultWebChromeClient</name>
        <shortname>DefaultWebChromeClient</shortname>
        <objectwrapper>android.webkit.WebChromeClient</objectwrapper>
        <owner>activity</owner>
        <event>ConsoleMessage(ConsoleMessage1 As ConsoleMessage) As Boolean</event>
        <event>GeoLocationPermissionsRequest As Int</event>
        <event>PermissionRequest(PermissionRequest1 As PermissionRequest)</event>
        <event>PermissionRequestCanceled(PermissionRequest1 As PermissionRequest)</event>
        <event>ProgressChanged(NewProgress As Int)</event>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initialize the DefaultWebChromeClient.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <field>
            <name>GEOLOCATION_PERMISSION_ALLOW_AND_REMEMBER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GEOLOCATION_PERMISSION_ALLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GEOLOCATION_PERMISSION_DISALLOW_AND_REMEMBER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GEOLOCATION_PERMISSION_DISALLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.DefaultWebViewClient</name>
        <shortname>DefaultWebViewClient</shortname>
        <objectwrapper>android.webkit.WebViewClient</objectwrapper>
        <owner>activity</owner>
        <event>LoadResource(Url As String)</event>
        <event>OverrideUrl(Url As String) As Boolean</event>
        <event>PageFinished(Url As String)</event>
        <event>PageStarted(Url As String, FavIcon As Bitmap)</event>
        <event>ReceivedError(ErrorCode As int, Description As String, FailingUrl As String)</event>
        <event>ReceivedLoginRequest((Realm As String, Account As String, Args As String)</event>
        <event>ReceivedSslError(SslErrorHandler1 As SslErrorHandler, SslError1 As SslError)</event>
        <event>ScaleChanged(OldScale As Float, NewScale As Float)</event>
        <event>ShouldInterceptRequest(Url As String) As WebResourceResponse</event>
        <event>UpdateVisitedHistory(Url As String, IsReload As Boolean)</event>
        <event>UserAndPasswordRequired(Host As String, Realm As String) As String()</event>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <field>
            <name>ERROR_IO</name>
            <comment>Failed to read or write to the server.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_AUTHENTICATION</name>
            <comment>User authentication failed on server .</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNSUPPORTED_AUTH_SCHEME</name>
            <comment>Unsupported authentication scheme (not basic or digest).</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_CONNECT</name>
            <comment>Failed to connect to the server.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_BAD_URL</name>
            <comment>Malformed URL.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_PROXY_AUTHENTICATION</name>
            <comment>User authentication failed on proxy.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_TOO_MANY_REQUESTS</name>
            <comment>Too many requests during this load.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_TIMEOUT</name>
            <comment>Connection timed out.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_FAILED_SSL_HANDSHAKE</name>
            <comment>Failed to perform SSL handshake.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_FILE_NOT_FOUND</name>
            <comment>File not found.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNSUPPORTED_SCHEME</name>
            <comment>Unsupported URI scheme.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_HOST_LOOKUP</name>
            <comment>Server or proxy hostname lookup failed.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_REDIRECT_LOOP</name>
            <comment>Too many redirects.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_UNKNOWN</name>
            <comment>Generic error.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ERROR_FILE</name>
            <comment>Generic file error.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.WebResourceResponse</name>
        <shortname>WebResourceResponse</shortname>
        <objectwrapper>android.webkit.WebResourceResponse</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetEncoding</name>
            <comment>Gets the resource response's encoding.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetMimeType</name>
            <comment>Gets the resource response's MIME type.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>InputStream1</name>
                <type>java.io.InputStream</type>
            </parameter>
        </method>
        <method>
            <name>SetData</name>
            <comment>Sets the InputStream that provides the resource response's data.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>InputStream1</name>
                <type>java.io.InputStream</type>
            </parameter>
        </method>
        <method>
            <name>SetEncoding</name>
            <comment>Sets the resource response's encoding, for example UTF-8.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Encoding</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetMimeType</name>
            <comment>Sets the resource response's MIME type, for example text/html.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetData</name>
            <comment>Gets the InputStream that provides the resource response's data.</comment>
            <returntype>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</returntype>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.WebHistoryItem</name>
        <shortname>WebHistoryItem</shortname>
        <objectwrapper>android.webkit.WebHistoryItem</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>OriginalUrl</name>
            <returntype>java.lang.String</returntype>
            <comment>Return the original url of this history item.</comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <comment>Return the document title of this history item.</comment>
        </property>
        <property>
            <name>Favicon</name>
            <returntype>android.graphics.Bitmap</returntype>
            <comment>Return the favicon of this history item or Null if no favicon was found.</comment>
        </property>
        <property>
            <name>Url</name>
            <returntype>java.lang.String</returntype>
            <comment>Return the url of this history item.
 The url is the base url of this history item.</comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.ConsoleMessage</name>
        <shortname>ConsoleMessage</shortname>
        <objectwrapper>android.webkit.ConsoleMessage</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Message</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SourceId</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>MessageLevel</name>
            <comment></comment>
            <returntype EnumType="true">android.webkit.ConsoleMessage.MessageLevel</returntype>
        </method>
        <method>
            <name>LineNumber</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <field>
            <name>LOG</name>
            <comment></comment>
            <returntype EnumType="true">android.webkit.ConsoleMessage.MessageLevel</returntype>
        </field>
        <field>
            <name>ERROR</name>
            <comment></comment>
            <returntype EnumType="true">android.webkit.ConsoleMessage.MessageLevel</returntype>
        </field>
        <field>
            <name>TIP</name>
            <comment></comment>
            <returntype EnumType="true">android.webkit.ConsoleMessage.MessageLevel</returntype>
        </field>
        <field>
            <name>DEBUG</name>
            <comment></comment>
            <returntype EnumType="true">android.webkit.ConsoleMessage.MessageLevel</returntype>
        </field>
        <field>
            <name>WARNING</name>
            <comment></comment>
            <returntype EnumType="true">android.webkit.ConsoleMessage.MessageLevel</returntype>
        </field>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.PermissionRequest</name>
        <shortname>PermissionRequest</shortname>
        <objectwrapper>android.webkit.PermissionRequest</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Grant</name>
            <comment>Call this method to grant origin the permission to access the given resources.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Resources</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>GetOrigin</name>
            <comment>Call this method to get the origin of the web page which is trying to access the restricted resources.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetResources</name>
            <comment>Call this method to get the resources the web page is trying to access.</comment>
            <returntype>java.lang.String[]</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Deny</name>
            <comment>Call this method to deny the request.</comment>
            <returntype>void</returntype>
        </method>
        <field>
            <name>RESOURCE_AUDIO_CAPTURE</name>
            <comment>Resource belongs to audio capture device, like microphone.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RESOURCE_PROTECTED_MEDIA_ID</name>
            <comment>Resource belongs to protected media identifier.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>RESOURCE_VIDEO_CAPTURE</name>
            <comment>Resource belongs to video capture device, like camera.</comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.SslErrorHandler</name>
        <shortname>SslErrorHandler</shortname>
        <objectwrapper>android.webkit.SslErrorHandler</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Cancel</name>
            <comment>Cancel this request and all pending requests for the WebView that had the error.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Proceed</name>
            <comment>Proceed with the SSL certificate.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.WebBackForwardList</name>
        <shortname>WebBackForwardList</shortname>
        <objectwrapper>android.webkit.WebBackForwardList</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetCurrentIndex</name>
            <comment>Return the index of the current history item.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetItemAtIndex</name>
            <comment>Return the history item at the given index.</comment>
            <returntype>uk.co.martinpearman.b4a.webkit.WebHistoryItem</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetCurrentItem</name>
            <comment>Return the current history item.</comment>
            <returntype>uk.co.martinpearman.b4a.webkit.WebHistoryItem</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Size</name>
            <returntype>int</returntype>
            <comment>Returns the total size of the back/forward list.</comment>
        </property>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.DefaultJavascriptInterface</name>
        <shortname>DefaultJavascriptInterface</shortname>
        <owner>activity</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>uk.co.martinpearman.b4a.webkit.FindListener</name>
        <shortname>FindListener</shortname>
        <objectwrapper>android.webkit.WebView.FindListener</objectwrapper>
        <owner>activity</owner>
        <event>FindResultReceived(ActiveMatchOrdinal As Int, NumberOfMatches As Int, IsDoneCounting As Boolean)</event>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initialize the FindListener.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pBA</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <version>2.2</version>
    <author>Martin Pearman</author>
</root>
